{"version":3,"file":"cleantalk-email-encoder.min.js","sources":["cleantalk-email-encoder.js"],"sourcesContent":["(async function() {\n    let apbctAmpState = await AMP.getState('apbctAmpState');\n\n    apbctAmpState = JSON.parse(apbctAmpState);\n\n    // const emailEncoderState = apbctAmpState.emailEncoderState;\n\n    // Listen clicks on encoded emails\n    let encodedEmailNodes = document.querySelectorAll('[data-original-string]');\n    //ctPublic.encodedEmailNodes = encodedEmailNodes;\n    if (encodedEmailNodes.length) {\n        for (let i = 0; i < encodedEmailNodes.length; ++i) {\n            console.log(encodedEmailNodes[i]);\n            if (\n                encodedEmailNodes[i].parentElement.href ||\n                encodedEmailNodes[i].parentElement.parentElement.href\n            ) {\n                // Skip listening click on hyperlinks\n                continue;\n            }\n            encodedEmailNodes[i].addEventListener('click', ctFillDecodedEmailHandler);\n        }\n    }\n\n    function ctFillDecodedEmailHandler(event) {\n        this.removeEventListener(\"click\", ctFillDecodedEmailHandler);\n        // @ToDo do email decoding here\n    }\n})();"],"names":["let","apbctAmpState","await","AMP","getState","encodedEmailNodes","JSON","parse","document","querySelectorAll","length","i","console","log","parentElement","href","addEventListener","ctFillDecodedEmailHandler","event","this","removeEventListener"],"mappings":"AAAA,CAAA,iBACIA,IAAIC,EAAgBC,MAAMC,IAAIC,SAAS,eAAe,EAOlDC,GALYC,KAAKC,MAAMN,CAAa,EAKhBO,SAASC,iBAAiB,wBAAwB,GAE1E,GAAIJ,EAAkBK,OAClB,IAAKV,IAAIW,EAAI,EAAGA,EAAIN,EAAkBK,OAAQ,EAAEC,EAC5CC,QAAQC,IAAIR,EAAkBM,EAAE,EAE5BN,EAAkBM,GAAGG,cAAcC,MACnCV,EAAkBM,GAAGG,cAAcA,cAAcC,MAKrDV,EAAkBM,GAAGK,iBAAiB,QAASC,CAAyB,EAIhF,SAASA,EAA0BC,GAC/BC,KAAKC,oBAAoB,QAASH,CAAyB,CAE/D,CACH,EAAE"}